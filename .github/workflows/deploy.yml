name: CI

on:
  push:
    branches:
      - master
      - dev

env:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Registry
      uses: docker/login-action@v2 
      with:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
        registry: ${{ vars.REGISTRY }}

    - name: Build and push server image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./docker/http.server.dockerfile
        push: true
        tags: ${{ vars.REGISTRY }}/${{ vars.REGISTRY_PROJECT }}/server:${{ github.ref }}

    - name: Build and push worker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./docker/http.worker.dockerfile
        push: true
        tags: ${{ vars.REGISTRY }}/${{ vars.REGISTRY_PROJECT }}/worker:${{ github.ref }}-worker

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set environment variables
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then 
          echo "OPENSHIFT_PROJECT=${{ vars.PLUGIN_NAME }}" >> $GITHUB_ENV
          echo "PLUGIN_ROUTE=${{ vars.PLUGIN_NAME }}.apps.hbp.eu" >> $GITHUB_ENV
        else
            echo "OPENSHIFT_PROJECT=${{ vars.PLUGIN_NAME }}-dev" >> $GITHUB_ENV
            echo "PLUGIN_ROUTE=${{ vars.PLUGIN_NAME }}-dev.apps.hbp.eu" >> $GITHUB_ENV
        fi

    - name: Install OpenShift CLI
      run: |
        curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz
        tar xvzf openshift-client-linux.tar.gz
        sudo mv oc kubectl /usr/local/bin/

    - name: Deploy to OpenShift
      run: |
        oc login ${{ vars.OPENSHIFT_SERVER }} --token=${{ secrets.OPENSHIFT_TOKEN }}
        oc project $OPENSHIFT_PROJECT
        oc process -f openshift-template.yml -p PLUGIN_NAME=$OPENSHIFT_PROJECT -p PLUGIN_ROUTE=$PLUGIN_ROUTE -p WORKER_IMAGE=${{ vars.REGISTRY }}/${{ vars.REGISTRY_PROJECT }}/worker:${{ github.ref }}-worker -p SERVER_IMAGE=${{ vars.REGISTRY }}/${{ vars.REGISTRY_PROJECT }}/server:${{ github.ref }} | oc apply -f -
